name: Combined Auto Triage Actions

on:
  issues:
    types: [opened, closed, labeled, unlabeled, edited, reopened]
  pull_request:
    types: [opened, labeled, unlabeled, edited, reopened, ready_for_review]
  schedule:
    - cron: "0 23 * * *"

jobs:
  immediate-actions:
    runs-on: ubuntu-latest
    steps:
      # 1. Set End Date for closed issues
      - name: Set End Date (Issues Closed)
        if: ${{ github.event_name == 'issues' && github.event.action == 'closed' }}
        uses: EndBug/project-fields@v2
        with:
          operation: set
          fields: "End date"
          github_token: ${{ secrets.PAT_SECRET }}
          project_url: "https://github.com/orgs/jv-kune-kune/projects/1"
          values: ${{ github.event.issue.closed_at }}

      # 2. Add Issue to Project
      - name: Add Issue to Project
        if: ${{ github.event_name == 'issues' && (github.event.action == 'opened' || github.event.action == 'reopened') }}
        uses: actions/add-to-project@v1.0.2
        with:
          project-url: "https://github.com/orgs/jv-kune-kune/projects/1"
          github-token: ${{ secrets.PAT_SECRET }}

      # 3. Extract Title & Determine Issue/PR Type
      - name: Extract Title & Determine Issue/PR Type
        if: ${{ github.event_name == 'issues' || github.event_name == 'pull_request' }}
        run: |
          if [ "${{ github.event_name }}" = "issues" ]; then
            title="${{ github.event.issue.title }}"
          else
            title="${{ github.event.pull_request.title }}"
          fi
          echo "Title: $title"
          echo "title=$title" >> $GITHUB_ENV
          lower_title=$(echo "$title" | tr '[:upper:]' '[:lower:]')
          case "$lower_title" in
            feat:*) echo "field=feature 🛠" >> $GITHUB_ENV ;;
            fix:*)  echo "field=bug fix 🐛" >> $GITHUB_ENV ;;
            docs:*) echo "field=documentation 📝" >> $GITHUB_ENV ;;
            chore:*) echo "field=chore 🧹" >> $GITHUB_ENV ;;
            test:*) echo "field=testing ✅" >> $GITHUB_ENV ;;
            perf:*) echo "field=performance 🏎" >> $GITHUB_ENV ;;
            style:*) echo "field=style 🎨" >> $GITHUB_ENV ;;
            refactor:*) echo "field=refactor ♻️" >> $GITHUB_ENV ;;
            ci:*)   echo "field=ci/cd ⚙️" >> $GITHUB_ENV ;;
            build:*) echo "field=build 🏗️" >> $GITHUB_ENV ;;
            revert:*) echo "field=revert 🔄" >> $GITHUB_ENV ;;
            *)       echo "field=unknown" >> $GITHUB_ENV ;;
          esac

      # 4. Update Issue Type Field if needed (for issues only)
      - name: Get Current Issue Type Field
        if: ${{ github.event_name == 'issues' && (github.event.action == 'labeled' || github.event.action == 'edited' || github.event.action == 'reopened' || github.event.action == 'unlabeled') }}
        id: get-issue-type
        uses: EndBug/project-fields@v2
        with:
          operation: get
          fields: "Issue Type"
          github_token: ${{ secrets.PAT_SECRET }}
          project_url: "https://github.com/orgs/jv-kune-kune/projects/1"
      - name: Set Issue Type Field
        if: ${{ github.event_name == 'issues' && (github.event.action == 'labeled' || github.event.action == 'edited' || github.event.action == 'reopened' || github.event.action == 'unlabeled') && (steps.get-issue-type.outputs.values == '') }}
        uses: EndBug/project-fields@v2
        with:
          operation: set
          fields: "Issue Type"
          github_token: ${{ secrets.PAT_SECRET }}
          project_url: "https://github.com/orgs/jv-kune-kune/projects/1"
          values: ${{ env.field }}

      # 5. Auto-assign Issue Author
      - name: Auto-assign Issue Author
        if: ${{ github.event_name == 'issues' && github.event.action == 'opened' }}
        uses: technote-space/assign-author@v1
        with:
          github_token: ${{ secrets.PAT_SECRET }}

      # 6. Auto-assign PR Author
      - name: Auto-assign PR Author
        if: ${{ github.event_name == 'pull_request' && github.event.action == 'opened' }}
        uses: technote-space/assign-author@v1
        with:
          github_token: ${{ secrets.PAT_SECRET }}

  delayed-actions:
    if: ${{ github.event_name == 'issues' && github.event.action == 'opened' }}
    runs-on: ubuntu-latest
    steps:
      - name: Wait for User Input
        run: |
          echo "Waiting 5 minutes to allow user to update fields..."
          sleep 300

      - name: Get Size and Estimate Fields (Delayed)
        id: get-estimate-fields
        uses: EndBug/project-fields@v2
        with:
          operation: get
          fields: "Size,Estimate"
          github_token: ${{ secrets.PAT_SECRET }}
          project_url: "https://github.com/orgs/jv-kune-kune/projects/1"

      - name: Validate Estimate Fields (Delayed)
        id: validate-estimate
        run: |
          echo "Retrieved fields: ${{ steps.get-estimate-fields.outputs.values }}"
          if [[ "${{ steps.get-estimate-fields.outputs.values }}" == ',' ]]; then
            echo "Estimate fields are empty. Skipping update."
            exit 0
          fi

      - name: Determine and Export Estimate Value (Delayed)
        id: determine-estimate
        run: |
          size=$(echo "${{ steps.get-estimate-fields.outputs.values }}" | cut -d',' -f1)
          estimate=$(echo "${{ steps.get-estimate-fields.outputs.values }}" | cut -d',' -f2)
          echo "Size: $size"
          echo "Existing Estimate: $estimate"
          if [[ -n "$estimate" ]]; then
            echo "Estimate already set. Exiting step."
            exit 0
          fi
          case "$size" in
            "XXS") value="0" ;;
            "XS")  value="1" ;;
            "S")   value="2" ;;
            "M")   value="3" ;;
            "L")   value="8" ;;
            "XL")  value="13" ;;
            "XXL") value="21" ;;
            *)     value="Unknown" ;;
          esac
          if [[ "$value" == "Unknown" ]]; then
            echo "Unknown size '$size'. No estimate will be set."
            exit 0
          fi
          echo "value=$value" >> $GITHUB_ENV

      - name: Set Estimate Field (Delayed)
        if: ${{ env.value != '' && env.value != 'Unknown' }}
        uses: EndBug/project-fields@v2
        with:
          operation: set
          fields: "Estimate"
          github_token: ${{ secrets.PAT_SECRET }}
          project_url: "https://github.com/orgs/jv-kune-kune/projects/1"
          values: ${{ env.value }}

      - name: Get Status and Start Date Fields (Delayed)
        id: get-start-date-fields
        uses: EndBug/project-fields@v2
        with:
          operation: get
          fields: "Status,Start date"
          github_token: ${{ secrets.PAT_SECRET }}
          project_url: "https://github.com/orgs/jv-kune-kune/projects/1"

      - name: Check and Set Start Date for In Progress (Delayed)
        run: |
          status=$(echo "${{ steps.get-start-date-fields.outputs.values }}" | cut -d',' -f1)
          start_date=$(echo "${{ steps.get-start-date-fields.outputs.values }}" | cut -d',' -f2)
          echo "Status: $status"
          echo "Start Date: $start_date"
          if [[ "$status" == "In progress" && -z "$start_date" ]]; then
            today=$(date +%Y-%m-%d)
            echo "Setting Start Date to $today."
            echo "start_date=$today" >> $GITHUB_ENV
          else
            echo "No Start Date update needed."
          fi

      - name: Set Start Date Field (Delayed)
        if: ${{ env.start_date }}
        uses: EndBug/project-fields@v2
        with:
          operation: set
          fields: "Start date"
          github_token: ${{ secrets.PAT_SECRET }}
          project_url: "https://github.com/orgs/jv-kune-kune/projects/1"
          values: ${{ env.start_date }}
