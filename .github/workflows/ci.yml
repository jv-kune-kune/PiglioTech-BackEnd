name: Java CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build, Test, and Analyze
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build the Project
      - name: Build with Maven
        run: mvn clean verify

      # Step 5: Run Unit Tests
      - name: Run Unit Tests
        run: mvn test

      # Step 6: Generate JaCoCo Coverage Report
      - name: Upload JaCoCo Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-coverage-report
          path: target/site/jacoco/

      # Step 7: Perform CodeQL Analysis
      - name: Perform CodeQL Analysis (Initialization)
        uses: github/codeql-action/init@v2
        with:
          languages: java

      - name: Build Project for CodeQL
        run: |
          export CODEQL_EXTRACTOR_JAVA_TRACER_LOG_LEVEL=INFO
          mvn clean verify

      - name: Perform CodeQL Analysis (Scan)
        uses: github/codeql-action/analyze@v2

      # Step 8: Static Code Analysis with Checkstyle
      - name: Generate Checkstyle Report
        run: mvn checkstyle:checkstyle

      - name: Upload Checkstyle Report
        uses: actions/upload-artifact@v3
        with:
          name: checkstyle-report
          path: target/site/checkstyle.html

      # Step 9: SonarCloud Analysis
      - name: SonarCloud Analysis
        uses: sonarsource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectKey: jv-kune-kune_PiglioTech-BackEnd
          organization: jv-kune-kune

      # Step 10: Dependency Review
      - name: Dependency Review
        uses: actions/dependency-review-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
